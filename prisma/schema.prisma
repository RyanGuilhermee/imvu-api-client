// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                  @id @default(uuid())
  name                   String
  email                  String                  @unique
  password               String
  verified               Boolean
  created_at             DateTime                @default(now())
  UserImvuAccount        UserImvuAccount[]
  RefreshToken           RefreshToken[]
  EmailVerificationToken EmailVerificationToken?
  PasswordResetToken     PasswordResetToken?

  @@map("users")
}

model UserImvuAccount {
  id         String   @id @default(uuid())
  username   String   @unique
  password   String
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  created_at DateTime @default(now())
  update_at  DateTime @updatedAt
  Reward     Reward[]

  @@map("user_imvu_accounts")
}

model Reward {
  id              String          @id @default(uuid())
  name            String
  image           String
  imvu_account    UserImvuAccount @relation(fields: [imvu_account_id], references: [id])
  imvu_account_id String
  created_at      DateTime        @default(now())

  @@map("rewards")
}

model RefreshToken {
  id         String @id @default(uuid())
  expires_in Int
  ip_address String
  user       User   @relation(fields: [user_id], references: [id])
  user_id    String

  @@map("refresh_token")
}

model EmailVerificationToken {
  id         String @id @default(uuid())
  token      String
  expires_in Int
  user       User   @relation(fields: [user_id], references: [id])
  user_id    String @unique

  @@map("email_verification_token")
}

model PasswordResetToken {
  id         String @id @default(uuid())
  token      String
  expires_in Int
  user       User   @relation(fields: [user_id], references: [id])
  user_id    String @unique

  @@map("password_reset_token")
}
